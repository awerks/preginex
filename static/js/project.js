import{toast,confirmBox,isMobile}from"./utils.js";function htmlTitle(e){var t=document.createElement("div");return t.style.fontFamily=window.getComputedStyle(document.body).fontFamily,t.innerHTML=e,t}document.addEventListener("DOMContentLoaded",function(){document.querySelector(".project-form").addEventListener("submit",function(e){var t=new Date(document.getElementById("start_date").value);new Date(document.getElementById("end_date").value)<t&&(e.preventDefault(),toast("End date must be after start date","error"))});let o="dark"===document.documentElement.getAttribute("data-theme");fetch(PROJECTS_URL).then(e=>e.json()).then(e=>{let s=[],r=[];e.forEach(e=>{if(e.tasks&&0!==e.tasks.length){let a="p"+e.project_id;s.push({id:a,label:e.project_name,title:htmlTitle("<span style='color: #e91e63;'><i class='fas fa-info-circle'></i> Project Description: "+e.description+"</span><br><span style='color: #3f51b5;'><i class='fas fa-calendar-alt'></i> Start: "+e.start+"</span><br><span style='color: #4caf50;'><i class='fas fa-calendar-check'></i> End: "+e.end+"</span><br>"+`<span style="color: ${o?"#f5f5f5":"#000"};"><i class='fas fa-user'></i> Manager: `+e.manager+"</span>"),shape:"box",color:"#a069ed",font:{color:"#ffffff",size:16},borderWidth:2,margin:10}),e.tasks.forEach(e=>{var t="t"+e.task_id;s.push({id:t,label:e.task_name,title:htmlTitle("<span style='color: #e91e63;'><i class='fas fa-info-circle'></i> Task Description: "+e.description+"</span><br><span style='color: #e04cd1;'><i class='fas fa-user'></i> Assigned to: "+e.assigned_username+"</span><br><span style='color: #3f51b5;'><i class='fas fa-calendar-alt'></i> Deadline: "+e.end+"</span><br><span style='color: "+("Completed"===e.status?"#4caf50":"Pending"===e.status?"#ff9800":"#FF0000")+";'><i class='fas fa-check'></i> Status: "+e.status+"</span>"),shape:"box",color:"Completed"===e.status?"#4caf50":"Pending"===e.status?"#ff9800":"#FF0000",font:{color:"#ffffff",size:14},borderWidth:1}),r.push({from:a,to:t,arrows:"to",color:{color:"#848484"},smooth:{enabled:!0,type:"cubicBezier",roundness:.5}})})}});var e=document.getElementById("projectGraph"),t={nodes:new vis.DataSet(s),edges:new vis.DataSet(r)},a={layout:{improvedLayout:!0},physics:{enabled:!0,solver:"forceAtlas2Based",forceAtlas2Based:{gravitationalConstant:-50,centralGravity:.02,springConstant:.02,springLength:40,damping:.8,avoidOverlap:.5},maxVelocity:50,minVelocity:.75,timestep:.35},interaction:{hover:!0,zoomView:isMobile(),dragView:!0},edges:{smooth:{type:"cubicBezier",forceDirection:"horizontal",roundness:.4}}};let n=new vis.Network(e,t,a);document.getElementById("resetLayoutBtn").addEventListener("click",function(){n.fit({animation:{duration:800,easingFunction:"easeInOutQuad"}})})}).catch(e=>console.error("Error fetching project data:",e)),document.querySelector("form").addEventListener("submit",function(e){var t=new Date(document.getElementById("start_date").value);new Date(document.getElementById("end_date").value)<t?(e.preventDefault(),toast("Start date cannot be after the end date","error")):toast("Project created successfully!","success")}),document.querySelector(".projects-table").addEventListener("click",async function(a){if(a.target.classList.contains("btn-neutral")){let e=a.target,t=e.closest("tr");t.querySelector("td").innerText;a.target.closest("tr").querySelectorAll("td:first-child, td:nth-child(2)").forEach(e=>{e.contentEditable=!0,e.classList.add("editable")});var s=t.querySelector("td.editable");function r(){t.querySelectorAll(".editable").forEach(e=>{e.contentEditable=!1,e.classList.remove("editable")}),e.classList.replace("btn-success","btn-neutral"),e.textContent="Edit",document.removeEventListener("click",n,!0),document.removeEventListener("keydown",o)}function n(e){t.contains(e.target)||r()}function o(e){"Escape"===e.key&&r()}s&&s.focus(),e.classList.replace("btn-neutral","btn-success"),e.textContent="Save",document.addEventListener("click",n,!0),document.addEventListener("keydown",o)}else{var e,t;a.target.classList.contains("btn-danger")?(s=a.target.closest("tr").querySelector("td").innerText,await confirmBox(`Delete ${s}?`,"Delete")&&fetch(DELETE_PROJECT_URL,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({project_id:a.target.closest("tr").dataset.projectId})}).then(e=>e.json()).then(e=>{e.success?(a.target.closest("tr").remove(),toast("Project deleted")):toast(`Failed to delete project
`+e.error,"error")}).catch(e=>{toast("Failed to delete project","error")})):a.target.classList.contains("btn-success")&&(a.target.closest("tr").querySelectorAll("td.editable").forEach(e=>{e.contentEditable=!1,e.classList.remove("editable")}),a.target.innerText="Edit",a.target.classList.remove("btn-success"),a.target.classList.add("btn-neutral"),s=a.target.closest("tr").querySelector("td").innerText,e=a.target.closest("tr").querySelector("td:nth-child(2)").innerText,t=a.target.closest("tr").dataset.projectId,fetch(EDIT_PROJECT_URL,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({project_name:s,description:e,project_id:t})}).then(e=>e.json()).then(e=>{e.success?toast("Project updated"):toast(`Failed to update project
`+e.error,"error")}).catch(e=>{console.error("Error:",e),toast("Failed to update project","error")}))}})});